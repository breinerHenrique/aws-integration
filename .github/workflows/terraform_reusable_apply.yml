name: Terrafom Plan - common steps
on: 
  workflow_call:
      inputs:
        resource_path:
          description: 'Path with terraform code from AWS resource'
          type: string
          required: true
        environment:
          description: 'Environment'
          type: string
          required: true

jobs:
  get-branch:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.extract_branch.outputs.BRANCH_NAME }}
      custom_value: ${{ steps.set_variable.outputs.CUSTOM_VALUE }}
    steps:
      - name: Extract Branch Name
        id: extract_branch
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set Custom Variable Based on Branch
        id: set_variable
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" == "main" ]]; then
            echo "CUSTOM_VALUE=production" >> $GITHUB_ENV
            echo "CUSTOM_VALUE=production" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF#refs/heads/}" == "staging" ]]; then
            echo "CUSTOM_VALUE=staging" >> $GITHUB_ENV
            echo "CUSTOM_VALUE=staging" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF#refs/heads/}" == "infra-terraform" ]]; then
            echo "CUSTOM_VALUE=develop" >> $GITHUB_ENV
            echo "CUSTOM_VALUE=develop" >> $GITHUB_OUTPUT
          else
            echo "CUSTOM_VALUE=Unknown Environment" >> $GITHUB_ENV
            echo "CUSTOM_VALUE=Unknown Environment" >> $GITHUB_OUTPUT
          fi 

  terraform_apply:
    name: Terraform Apply - ${{ needs.get-branch.outputs.custom_value }} ${{ inputs.resource_path }}
    runs-on: ubuntu-latest
    needs: get-branch
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout  
    defaults: # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
      run:
        shell: bash
        working-directory: tf-aws-resources/${{ needs.get-branch.outputs.custom_value }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::236730285067:role/role_GitHubActionsIntegration  

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init - ${{ needs.get-branch.outputs.custom_value }} ${{ inputs.resource_path }}
      run: |
        cd ${{ inputs.resource_path }}
        terraform init

    # Generates an execution apply for Terraform
    - name: Terraform Apply - ${{ needs.get-branch.outputs.custom_value }} ${{ inputs.resource_path }}
      run: |
        cd ${{ inputs.resource_path }}
        terraform apply --auto-approve